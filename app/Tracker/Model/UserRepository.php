<?php

namespace Tracker\Model;
use League\OAuth2\Server\Entities\ClientEntityInterface;
use League\OAuth2\Server\Repositories\UserRepositoryInterface;

/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserRepository extends Base\UserRepository implements UserRepositoryInterface
{
	public function getUserEntityByUserCredentials(
		$username,
		$password,
		$grantType,
		ClientEntityInterface $clientEntity
	)
	{

		$user = $this->findOneBy(['email' => $username]);
		if(!$user)
			return false;

		return password_verify($password, $user->getHashedPassword())?$user:false;
	}

	public function getResellerCodes()
	{

		$query = $this->getEntityManager()->createQuery('SELECT u.resellerCode, u.name FROM Tracker\Model\User u WHERE u.resellerCode is not null');
		return $query->getResult();
	}

	public function getBuyersByUser(\Tracker\Model\User $user)
	{

		$query = $this->getEntityManager()->createQuery(
					'SELECT u FROM Tracker\Model\User u
					JOIN u.ownedProducts p
					WHERE SUBSTRING(p.identifier, 1, 3) = :resellerCode'
		);
		$query->setParameter(':resellerCode', $user->getResellerCode());
		return $query->getResult();
	}
}
