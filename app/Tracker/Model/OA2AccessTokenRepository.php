<?php

namespace Tracker\Model;
use League\OAuth2\Server\Entities\AccessTokenEntityInterface;
use League\OAuth2\Server\Entities\ClientEntityInterface;
use League\OAuth2\Server\Repositories\AccessTokenRepositoryInterface;

/**
 * OA2AccessTokenRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class OA2AccessTokenRepository extends Base\OA2AccessTokenRepository implements AccessTokenRepositoryInterface
{
	public function getNewToken(ClientEntityInterface $clientEntity, array $scopes, $userIdentifier = null)
	{
		return new OA2AccessToken();
	}

	public function persistNewAccessToken(AccessTokenEntityInterface $accessTokenEntity)
	{
		/* @var OA2AccessToken $accessTokenEntity */
		$accessTokenEntity->save();
	}

	public function revokeAccessToken($tokenId)
	{
		$accessToken = $this->findOneBy(['identifier' => $tokenId]);
		$accessToken->setIsRevoked(true);
		$accessToken->save();

		return $this;
	}

	public function isAccessTokenRevoked($tokenId)
	{

		$accessToken = $this->findOneBy(['identifier' => $tokenId]);

		return $accessToken->getIsRevoked();
	}

}
